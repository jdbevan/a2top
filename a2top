#!/bin/bash
round() {
	echo $( printf %.$2f $(echo "scale=$2;(((10^$2)*$1)+0.5)/(10^$2)" | bc) )
}

print_many() {
	str=$1
	num=$2
	if [ "$num" -gt "0" ]
	then
		printf -v outstr "%-${num}s" "$str"
		echo -n "${outstr// /$str}"
	fi
}

print_bar() {
	MAXWIDTH=80
	VAL=$1
	TOTAL=$2

	BARLENGTH=`echo "scale=2;$VAL / $TOTAL * $MAXWIDTH" | bc -l`
	BARLENGTH=`round $BARLENGTH 0`
	let FILLLENGTH=MAXWIDTH-BARLENGTH

	echo -n "["
	print_many "#" $BARLENGTH
	print_many "." $FILLLENGTH
	echo "]"
}

parse_scoreboard() {
	WAIT=0
	START=0
	READ=0
	SEND=0
	KEEP=0
	DNS=0
	CLOSE=0
	LOG=0
	GRACE=0
	IDLE=0
	NONE=0

	if [[ $1 =~ ^Scoreboard:\ ([_SRWKDCLGI.]+)$ ]]; then
		PROCESSES="${BASH_REMATCH[1]}"

		while IFS= read -r -n1 char
		do
			#echo "$char"
			case $char in
				_ )
					let WAIT++
					;;
				S )
					let START++
					;;
				R )
					let READ++
					;;
				W )
					let SEND++
					;;
				K )
					let KEEP++
					;;
				D )
					let DNS++
					;;
				C )
					let CLOSE++
					;;
				L )
					let LOG++
					;;
				G )
					let GRACE++
					;;
				I )
					let IDLE=++
					;;
				. )
					let NONE++
					;;
			esac
		done < <(echo "$PROCESSES")
	fi

	let ALL=WAIT+START+READ+SEND+KEEP+DNS+CLOSE+LOG+GRACE+IDLE+NONE

	echo -e "WAITING:\t`print_bar $WAIT $ALL`"
	echo -e "STARTING:\t`print_bar $START $ALL`"
	echo -e "READING:\t`print_bar $READ $ALL`"
	echo -e "SENDING:\t`print_bar $SEND $ALL`"
	echo -e "KEEP ALIVE:\t`print_bar $KEEP $ALL`"
	echo -e "DNS LOOKUP:\t`print_bar $DNS $ALL`"
	echo -e "CLOSING:\t`print_bar $CLOSE $ALL`"
	echo -e "LOGGING:\t`print_bar $LOG $ALL`"
	echo -e "GRACEFUL:\t`print_bar $GRACE $ALL`"
	echo -e "IDLE:\t\t`print_bar $IDLE $ALL`"
	echo -e "NONE:\t\t`print_bar $NONE $ALL`"
}

URL="http://localhost/server-status?auto"

curl -s "$URL" |
while IFS= read -r line; do
	if [[ $line =~ ^Scoreboard ]];
	then
		parse_scoreboard "$line"
	else
		echo "$line"
	fi
done
